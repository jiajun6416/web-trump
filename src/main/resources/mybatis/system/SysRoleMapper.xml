<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="SysRoleMapper">
  <resultMap id="BaseResultMap" type="com.jiajun.pojo.system.SysRoleEntity">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="role_type" jdbcType="INTEGER" property="roleType" />
    <result column="menu_ids" jdbcType="VARCHAR" property="menuIds" />
    <result column="operation_ids" jdbcType="VARCHAR" property="operationIds" />
  </resultMap>
  <sql id="Base_Column_List">
    id, role_name, parent_id, sort, role_type, menu_ids, operation_ids
  </sql>
  
  <select id="selectRoleByType" parameterType="int" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from sys_role
    where  role_type = #{roleType}  and  parent_id = 0 
  </select>
  
  <select id="getMaxRoletype" resultType="int">
  	select max(role_type) from sys_role
  </select>
  
  <select id="getRoleNumByType" parameterType="int" resultType="int">
	select count(*) from sys_role where parent_id !=0 and role_type = #{roleType}  
  </select>

  <delete id="deleteByRoleType" parameterType="int">
  	delete from sys_role where role_type = #{roleType}
  </delete>  
  
  <select id="selectMenuByType" parameterType="int" resultType="string">
  	select 
		sys_role.menu_ids
	from 
		sys_role
	where sys_role.role_type=#{roleType} and sys_role.parent_id = 0
  </select>
  
  
   <select id="getAllTypeRole" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from sys_role
    where  id != 1  and  parent_id = 0 order by sort
  </select>
  
   <select id="getByType" parameterType="int" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role 
    where parent_id != 0 and role_type = #{type,jdbcType=BIT}  order by sort
  </select>
  	
  <select id="getParentByType" parameterType="int" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where role_type = #{type,jdbcType=BIT} and  parent_id = 0  
  </select>
  	
  <update id="updateByRoleType" parameterType="map">
  	UPDATE SYS_ROLE SET MENU_IDS =#{menuIds} WHERE ROLE_TYPE=#{roleType} AND PARENT_ID=0
  </update>
  	
  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
  	select
  	<include refid="Base_Column_List"/>
  	 from sys_role where id in (select role_id from sys_user_role where user_id = #{id})
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jiajun.pojo.system.SysRoleEntity">
    insert into sys_role (id, role_name, parent_id, 
      sort, role_type, menu_ids, 
      operation_ids)
    values (#{id,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, 
      #{sort,jdbcType=INTEGER}, #{roleType,jdbcType=INTEGER}, #{menuIds,jdbcType=VARCHAR}, 
      #{operationIds,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jiajun.pojo.system.SysRoleEntity">
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="roleType != null">
        role_type,
      </if>
      <if test="menuIds != null">
        menu_ids,
      </if>
      <if test="operationIds != null">
        operation_ids,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="roleType != null">
        #{roleType,jdbcType=INTEGER},
      </if>
      <if test="menuIds != null">
        #{menuIds,jdbcType=VARCHAR},
      </if>
      <if test="operationIds != null">
        #{operationIds,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateMenuIds" parameterType="com.jiajun.pojo.system.SysRoleEntity">
  	update sys_role
  	set
  	  menu_ids = #{menuIds,jdbcType=VARCHAR}
  	  where id = #{id,jdbcType=INTEGER}
  </update>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.jiajun.pojo.system.SysRoleEntity">
    update sys_role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="roleType != null">
        role_type = #{roleType,jdbcType=INTEGER},
      </if>
      <if test="menuIds != null">
        menu_ids = #{menuIds,jdbcType=VARCHAR},
      </if>
      <if test="operationIds != null">
        operation_ids = #{operationIds,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jiajun.pojo.system.SysRoleEntity">
    update sys_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      role_type = #{roleType,jdbcType=INTEGER},
      menu_ids = #{menuIds,jdbcType=VARCHAR},
      operation_ids = #{operationIds,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>