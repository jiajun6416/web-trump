<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:c="http://www.springframework.org/schema/c"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:amq="http://activemq.apache.org/schema/core" xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/websocket
				http://www.springframework.org/schema/websocket/spring-websocket.xsd
					http://www.springframework.org/schema/mvc
						http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
							http://www.springframework.org/schema/context
								http://www.springframework.org/schema/context/spring-context.xsd
									http://www.springframework.org/schema/data/mongo       
										http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd   
											http://www.springframework.org/schema/tx
											http://www.springframework.org/schema/tx/spring-tx.xsd
										http://www.springframework.org/schema/aop
									http://www.springframework.org/schema/aop/spring-aop.xsd
								http://www.springframework.org/schema/cache
							http://www.springframework.org/schema/cache/spring-cache.xsd
						http://activemq.apache.org/schema/core 
					http://activemq.apache.org/schema/core/activemq-core.xsd
				http://www.springframework.org/schema/jms 
			http://www.springframework.org/schema/jms/spring-jms.xsd
		http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- 组件扫面, 也可以使用排除controller注解 -->
	<context:component-scan base-package="com.jiajun">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<context:property-placeholder location="classpath:config/*.properties" />
	<!-- 开启spring缓存,cache-manager缺省值为cacheManager -->
	<cache:annotation-driven cache-manager="cacheManager" />
	
	<!-- ===========================spring 自带整合redis cache====================== -->
	<bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
		<property name="transactionAware" value="true"/>
		<constructor-arg name="redisOperations" ref="redisTemplate"/>
		<!-- 默认失效时间, 单位s -->
		<property name="defaultExpiration" value="300"/>
		<constructor-arg name="cacheNames">
			<set>
				<value>menu</value>
				<value>role</value>
			</set>
		</constructor-arg>
	</bean>
	
	<!-- ==================spring 整合ehcache============================= -->
	<!-- spring整合ehcache,环绕事务,事务回滚缓存回滚 -->
<!-- 	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager" ref="ehcacheManagerFacotry" />
		<property name="transactionAware" value="true"/>
	</bean> -->

	<!-- spring生成 net.sf.ehcache.CacheManager的工厂, 有一个名称的cachemanager只能存在一个-->
	<bean id="ehcacheManagerFacotry" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:ehcache/ehcache.xml" />
		<property name="cacheManagerName" value="springCache"/>
	</bean>


</beans>