<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<!-- web.xml中shiro的filter对应的bean -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<!-- 未认证走的loginUrl -->
		<property name="loginUrl" value="/toLogin" />
		<!-- 通过unauthorizedUrl指定没有权限操作时跳转页面-->
		<property name="unauthorizedUrl" value="/refuse" />
		<!-- 自定义过滤器 -->
	<!-- <property name="filters">
			<map>
				自定义权限拦截器, 使用 myPerms["user:add"]实现admin用户的直接放行, ajax请求返回json.注:自定义filter和并不能对注解生效, 注解是使用反射找到注解
				<entry key="myPerms">
					<bean class="com.jiajun.shiro.filter.MyPermissionsAuthorizationFilter"/>
				</entry>
			</map>
		</property> -->
		<!-- 过虑器链-->
		<property name="filterChainDefinitions">
			<value>
				<!-- 对静态资源设置匿名访问 -->
				/static/** = anon
				/css/** = anon
				/js/** = anon
				/login = anon
				<!-- 验证码 -->
				/checkCode/** = anon
				<!-- 注册需要接口 -->
				/user/hasUsername = anon
				/user/hasEmail = anon
				/user/onlineUser = anon
				/user/regist = anon
				<!--shiro拦截到请求,通过session管理清除掉session-->
				/logout = logout
				<!-- rememberMe -->
				/** = authc 
			</value>
		</property>
	</bean>
	
	<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="customRealm" />
		<property name="sessionManager" ref="sessionManager" />
		<property name="cacheManager" ref="redisCacheManager"/>
	</bean>
	
	
	<!-- realm -->
	<bean id="customRealm" class="com.jiajun.shiro.realm.CustomRealm">
		<!-- 将凭证匹配器设置到realm中，realm按照凭证匹配器的要求进行散列 -->
		<property name="credentialsMatcher" ref="credentialsMatcher"/>
		<!-- 使用缓存 -->
	    <property name="cachingEnabled" value="true"/> 
	    <!-- 默认会关闭认证信息缓存,不然导入登陆的时候出现类型转换异常 --> 
	    <!-- 启用授权缓存 -->
	    <property name="authorizationCachingEnabled" value="true"/>  
	    <!-- 授权缓存名称, 默认是Principal, 推荐存储用户名(String), 后面好处多, redis缓存key再下一次登陆还是可用的 -->
	    <property name="authorizationCacheName" value="authorizationCache"/>
	</bean>

	<!-- 凭证匹配器 -->
	<bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<property name="hashAlgorithmName" value="md5" />
		<property name="hashIterations" value="${hashIterations}" />
	</bean>

	<!-- encache缓存管理 -->
	<!-- <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
    	<property name="cacheManagerConfigFile" value="classpath:ehcache/ehcache.xml"/>
    </bean> -->

	<!-- 会话管理器，web容器的session废弃 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- session的失效时长，单位毫秒 -->
        <property name="globalSessionTimeout" value="1800000"/>
        <!-- 定时清理失效会话, 清理用户直接关闭浏览器造成的孤立会话   -->
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionIdCookie" ref="shiroCookie"/>	
        <property name="SessionDAO" ref="redisSessionDAO"/>
    </bean>
    
	<!-- 默认内存sessionDAO -->
	<!-- <bean id="SessionDAO" class="org.apache.shiro.session.mgt.eis.MemorySessionDAO"/> -->
	
	
	<!--
		指定本系统SESSIONID, 默认为: JSESSIONID
		问题: 与SERVLET容器名冲突, 如JETTY, TOMCAT 等默认JSESSIONID,
		当跳出SHIRO SERVLET时如ERROR-PAGE容器会为JSESSIONID重新分配值导致登录会话丢失!
		如果直接跳转错误jsp页面的时候, jsp中会调用 getSession(),会创建一个新的sessionId, 此时sessionID的名称和默认的一致, 会导致默认的sessionID被覆盖
		解决: 1.设置jsp中禁用session
			  2.修改shiro默认的sessionId名称
			  3.其他使用默认值即可
	-->
	<bean id="shiroCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
	    <property name="name" value="SHIROSESSIONID"/>
	    <!-- 单位秒， 7天 -->
	    <property name="maxAge" value="604800"/>
	</bean>
	
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 --> 
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

</beans>